"""
Django settings for api project.

Generated by 'django-admin startproject' using Django 3.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

import os

from dotenv import load_dotenv
from django.core.management.utils import get_random_secret_key
from pathlib import Path

load_dotenv()

# Environement
ENV = os.getenv('ENV', 'production')

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Frontend
FRONTEND_DIR = os.path.join(BASE_DIR, '..', 'frontend', 'dist')
FRONTEND_URL = os.getenv('FRONTEND_URL', '')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY', get_random_secret_key())

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True if ENV == 'development' else False

ALLOWED_HOSTS = os.getenv('ALLOWED_HOSTS').split(',')


# Application definition
INSTALLED_APPS = [
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'referential',
    'observation'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        #'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'DIRS': [FRONTEND_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'api.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'whatusea.sqlite3'),
    }
}
"""
# Pour postgres
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'HOST': os.getenv('DATABASE_HOST', ''),
        'PORT': os.getenv('DATABASE_PORT', ''),
        'NAME': os.getenv('DATABASE_NAME', ''),
        'USER': os.getenv('DATABASE_USER', ''),
        'PASSWORD': os.getenv('DATABASE_PASSWORD', '')
    }
}
"""

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/
LANGUAGE_CODE = 'fr-FR'
TIME_ZONE = 'Europe/Paris'
USE_I18N = True
USE_L10N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/
STATIC_URL = '/static/'
STATICFILES_DIRS = (os.path.join(FRONTEND_DIR, 'static'),)
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# Redirection
LOGIN_REDIRECT_URL = '/'
LOGIN_URL = '/'
LOGOUT_REDIRECT_URL = '/'

# Fixtures
FIXTURE_DIRS = [os.path.join(BASE_DIR, 'fixtures')]

# Cookie CSRF SESSION
CSRF_COOKIE_SAMESITE = 'Strict' # empêche le cookie CSRF d’être envoyé dans les requêtes inter-sites, valeur "SameSite" du cookie
CSRF_COOKIE_HTTPONLY = True # le JavaScript côté client ne sera pas en mesure d’accéder au cookie CSRF, valeur "HttpOnly" du cookie
SESSION_COOKIE_SAMESITE = 'Strict' # empêche le cookie de SESSION d’être envoyé dans les requêtes inter-sites, valeur SameSite du cookie
SESSION_COOKIE_HTTPONLY = True # le JavaScript côté client ne sera pas en mesure d’accéder au cookie SESSION, valeur HttpOnly du cookie

# Security
if ENV == 'development':
    # Cookie CSRF SESSION
    CSRF_COOKIE_SECURE = False # le cookie CSRF n’est envoyé que pour des connexions HTTPS, valeur "secure" du cookie
    SESSION_COOKIE_SECURE = False # le cookie de SESSION n’est envoyé que pour des connexions HTTPS, valeur secure du cookie
else:
    # Cookie CSRF SESSION
    CSRF_COOKIE_SECURE = True # le cookie CSRF n’est envoyé que pour des connexions HTTPS, valeur "secure" du cookie
    SESSION_COOKIE_SECURE = True # le cookie de SESSION n’est envoyé que pour des connexions HTTPS, valeur secure du cookie
    # Redirection HTTP vers HTTPS
    SECURE_SSL_REDIRECT = True # redirige toutes les requêtes HTTP vers HTTPS
    # HSTS settings
    # Les navigateurs modernes peuvent refuser les connexions à votre nom de domaine si la connexion n’est pas sécurisée
    # Pour une certaine période de temps
    SECURE_HSTS_PRELOAD = True
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_SECONDS = 0 # 31536000 # 1 year

# Time
DATETIME_FORMAT = '%d-%m-%Y %H:%M:%S'
USE_L10N = False
USE_TZ = False # if you plan to disable timezone support
